{
  "version": 3,
  "sources": ["browser-external:module", "browser-external:path", "../../windicss/helpers/index.mjs"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"module\" has been externalized for browser compatibility. Cannot access \"module.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"path\" has been externalized for browser compatibility. Cannot access \"path.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "import require$$0, { createRequire } from 'module';\nimport require$$1 from 'path';\n\nfunction windi(strings) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    // windi template literal\n    return strings.reduce(function (query, queryPart, i) {\n        var valueExists = i < values.length;\n        var text = query + queryPart;\n        return valueExists ? text + values[i] : text;\n    }, '');\n}\n\nvar lib = {exports: {}};\n\n(function (module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addHook = addHook;\n\nvar _module = _interopRequireDefault(require$$0);\n\nvar _path = _interopRequireDefault(require$$1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* (c) 2015 Ari Porad (@ariporad) <http://ariporad.com>. License: ariporad.mit-license.org */\nconst nodeModulesRegex = /^(?:.*[\\\\/])?node_modules(?:[\\\\/].*)?$/; // Guard against poorly mocked module constructors.\n\nconst Module = module.constructor.length > 1 ? module.constructor : _module.default;\nconst HOOK_RETURNED_NOTHING_ERROR_MESSAGE = '[Pirates] A hook returned a non-string, or nothing at all! This is a' + ' violation of intergalactic law!\\n' + '--------------------\\n' + 'If you have no idea what this means or what Pirates is, let me explain: ' + 'Pirates is a module that makes is easy to implement require hooks. One of' + \" the require hooks you're using uses it. One of these require hooks\" + \" didn't return anything from it's handler, so we don't know what to\" + ' do. You might want to debug this.';\n/**\n * @param {string} filename The filename to check.\n * @param {string[]} exts The extensions to hook. Should start with '.' (ex. ['.js']).\n * @param {Matcher|null} matcher A matcher function, will be called with path to a file. Should return truthy if the file should be hooked, falsy otherwise.\n * @param {boolean} ignoreNodeModules Auto-ignore node_modules. Independent of any matcher.\n */\n\nfunction shouldCompile(filename, exts, matcher, ignoreNodeModules) {\n  if (typeof filename !== 'string') {\n    return false;\n  }\n\n  if (exts.indexOf(_path.default.extname(filename)) === -1) {\n    return false;\n  }\n\n  const resolvedFilename = _path.default.resolve(filename);\n\n  if (ignoreNodeModules && nodeModulesRegex.test(resolvedFilename)) {\n    return false;\n  }\n\n  if (matcher && typeof matcher === 'function') {\n    return !!matcher(resolvedFilename);\n  }\n\n  return true;\n}\n/**\n * @callback Hook The hook. Accepts the code of the module and the filename.\n * @param {string} code\n * @param {string} filename\n * @returns {string}\n */\n\n/**\n * @callback Matcher A matcher function, will be called with path to a file.\n *\n * Should return truthy if the file should be hooked, falsy otherwise.\n * @param {string} path\n * @returns {boolean}\n */\n\n/**\n * @callback RevertFunction Reverts the hook when called.\n * @returns {void}\n */\n\n/**\n * @typedef {object} Options\n * @property {Matcher|null} [matcher=null] A matcher function, will be called with path to a file.\n *\n * Should return truthy if the file should be hooked, falsy otherwise.\n *\n * @property {string[]} [extensions=['.js']] The extensions to hook. Should start with '.' (ex. ['.js']).\n * @property {string[]} [exts=['.js']] The extensions to hook. Should start with '.' (ex. ['.js']).\n *\n * @property {string[]} [extension=['.js']] The extensions to hook. Should start with '.' (ex. ['.js']).\n * @property {string[]} [ext=['.js']] The extensions to hook. Should start with '.' (ex. ['.js']).\n *\n * @property {boolean} [ignoreNodeModules=true] Auto-ignore node_modules. Independent of any matcher.\n */\n\n/**\n * Add a require hook.\n *\n * @param {Hook} hook The hook. Accepts the code of the module and the filename. Required.\n * @param {Options} [opts] Options\n * @returns {RevertFunction} The `revert` function. Reverts the hook when called.\n */\n\n\nfunction addHook(hook, opts = {}) {\n  let reverted = false;\n  const loaders = [];\n  const oldLoaders = [];\n  let exts; // We need to do this to fix #15. Basically, if you use a non-standard extension (ie. .jsx), then\n  // We modify the .js loader, then use the modified .js loader for as the base for .jsx.\n  // This prevents that.\n\n  const originalJSLoader = Module._extensions['.js'];\n  const matcher = opts.matcher || null;\n  const ignoreNodeModules = opts.ignoreNodeModules !== false;\n  exts = opts.extensions || opts.exts || opts.extension || opts.ext || ['.js'];\n\n  if (!Array.isArray(exts)) {\n    exts = [exts];\n  }\n\n  exts.forEach(ext => {\n    if (typeof ext !== 'string') {\n      throw new TypeError(`Invalid Extension: ${ext}`);\n    }\n\n    const oldLoader = Module._extensions[ext] || originalJSLoader;\n    oldLoaders[ext] = Module._extensions[ext];\n\n    loaders[ext] = Module._extensions[ext] = function newLoader(mod, filename) {\n      let compile;\n\n      if (!reverted) {\n        if (shouldCompile(filename, exts, matcher, ignoreNodeModules)) {\n          compile = mod._compile;\n\n          mod._compile = function _compile(code) {\n            // reset the compile immediately as otherwise we end up having the\n            // compile function being changed even though this loader might be reverted\n            // Not reverting it here leads to long useless compile chains when doing\n            // addHook -> revert -> addHook -> revert -> ...\n            // The compile function is also anyway created new when the loader is called a second time.\n            mod._compile = compile;\n            const newCode = hook(code, filename);\n\n            if (typeof newCode !== 'string') {\n              throw new Error(HOOK_RETURNED_NOTHING_ERROR_MESSAGE);\n            }\n\n            return mod._compile(newCode, filename);\n          };\n        }\n      }\n\n      oldLoader(mod, filename);\n    };\n  });\n  return function revert() {\n    if (reverted) return;\n    reverted = true;\n    exts.forEach(ext => {\n      // if the current loader for the extension is our loader then unregister it and set the oldLoader again\n      // if not we can not do anything as we cannot remove a loader from within the loader-chain\n      if (Module._extensions[ext] === loaders[ext]) {\n        Module._extensions[ext] = oldLoaders[ext];\n      }\n    });\n  };\n}\n}(lib, lib.exports));\n\nfunction convert(code) {\n    var map = {\n        '@tailwindcss\\\\/typography': 'windicss/plugin/typography',\n        '@tailwindcss\\\\/forms': 'windicss/plugin/forms',\n        '@tailwindcss\\\\/aspect-ratio': 'windicss/plugin/aspect-ratio',\n        '@tailwindcss\\\\/line-clamp': 'windicss/plugin/line-clamp',\n        'tailwindcss\\\\/plugin': 'windicss/plugin',\n        'tailwindcss\\\\/colors': 'windicss/colors',\n        'tailwindcss\\\\/resolveConfig': 'windicss/resolveConfig',\n        'tailwindcss\\\\/defaultConfig': 'windicss/defaultConfig',\n        'tailwindcss\\\\/defaultTheme': 'windicss/defaultTheme',\n    };\n    for (var _i = 0, _a = Object.entries(map); _i < _a.length; _i++) {\n        var _b = _a[_i], key = _b[0], value = _b[1];\n        code = code.replace(new RegExp(key, 'g'), value);\n    }\n    return code;\n}\nfunction transform(path) {\n    var require = createRequire(import.meta.url);\n    var matcher = function (filename) { return !/\\/windicss\\//.test(filename); };\n    var revert = lib.exports.addHook(function (code) { return convert(code); }, { exts: ['.js'], matcher: matcher, ignoreNodeModules: false });\n    var mod = require(path);\n    revert();\n    return mod;\n}\n\nfunction defineConfig(config) {\n    return config;\n}\n\nexport { convert, defineConfig, transform, windi };\n"],
  "mappings": "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",
  "names": ["require$$0", "require$$1", "require"]
}
